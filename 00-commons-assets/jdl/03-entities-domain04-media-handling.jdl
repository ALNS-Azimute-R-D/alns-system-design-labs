/** *************************************
/* Microservice: 09 - msrvc09MediaHandling
*  --> 
/* ************************************* */



/**
 * - RawAssetProcTmp 
 * - AssetType
 * - Asset
 * - AssetMetadata
*/

entity AssetType(tb_type_asset) {
    acronym String maxlength(30)
    name String required maxlength(100)
    description String maxlength(255)
    handlerClazzName String maxlength(255)
    customAttributesDetailsJSON String maxlength(2048)
}

entity RawAssetProcTmp(tb_raw_asset_proc_tmp) {
    name String required maxlength(255)
    statusRawProcessing StatusRawProcessingEnum
    fullFilenamePath String maxlength(512)
    assetRawContentAsBlob Blob
    customAttributesDetailsJSON String maxlength(4096)
}

entity Asset(tb_asset) {
    name String required maxlength(512)
    storageTypeUsed StorageTypeEnum
    fullFilenamePath String maxlength(512)
    status StatusAssetEnum
    preferredPurpose PreferredPurposeEnum
    assetContentAsBlob Blob
    activationStatus ActivationStatusEnum required
}

entity AssetMetadata(tb_asset_metadata) {
    metadataDetailsJSON String maxlength(8192)
}

entity AssetCollection(tb_assets_collection) {
    name String required maxlength(512)
    fullFilenamePath String maxlength(512)
    activationStatus ActivationStatusEnum required
}



enum StatusRawProcessingEnum {
    UPLOADING, UPLOADED, WAITING_FOR_PROCESSING, PROCESSING, DONE, FAILURE
}

enum StorageTypeEnum {
    BLOB_IN_DB, LOCAL_FILESYSTEM, LOCAL_MINIO, REMOTE_FILESYSTEM, REMOTE_MINIO, AWS_S3, OTHER_CLOUD_STORAGE
}

enum StatusAssetEnum {
    ENABLED, DISABLED, DELETED
}

enum PreferredPurposeEnum {
    USER_AVATAR, LOGO_IMG, PHOTO_ALBUM, ANY_OFFICE_FILE_TYPE, EXECUTABLE_PROGRAM_BINARY, OTHER
}





relationship ManyToOne {
    RawAssetProcTmp{assetType(name) required} to AssetType{rawAssetsProcsTmps}
    Asset{assetType(name) required} to AssetType{assets}
    Asset{rawAssetProcTmp(name)} to RawAssetProcTmp{assets}
}

relationship OneToOne {
    AssetMetadata{asset(name) required} to Asset{assetMetadata}
}

relationship ManyToMany {
    AssetCollection{asset} to Asset{assetCollection}
}