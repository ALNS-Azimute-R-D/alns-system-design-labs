/** *************************************
/* Microservice: 08 - msrvc08ECommerce
*  --> 
/* ************************************* */


/**
 * - Category 
 * - Article
 * - Order
 * - OrderItem
*/


entity Customer(tb_customer) {
    customerBusinessCode String required maxlength(15)
    fullname String required minlength(2) maxlength(80)
    customAttributesDetailsJSON String maxlength(2048)
    customerStatus CustomerStatusEnum required
    activationStatus ActivationStatusEnum required
}

entity CustomerType(tb_type_customer) {
    name String required maxlength(20)
    description String maxlength(255)
    businessHandlerClazz String maxlength(255)
}

entity Category(tb_category) {
    acronym String maxlength(30)
    name String required maxlength(100)
    description String maxlength(255)
    handlerClazzName String maxlength(255)
}

entity Article(tb_article) {
    inventoryProductId Long required
    skuCode String maxlength(60)
    customName String maxlength(150)
    customDescription String maxlength(8192)
    priceValue BigDecimal
    itemSize SizeOptionEnum required
    activationStatus ActivationStatusEnum required
}

entity Order(tb_order) {
    businessCode String required maxlength(20)
    placedDate Instant required
    totalTaxValue BigDecimal
    totalDueValue BigDecimal
    status OrderStatusEnum required
    estimatedDeliveryDate Instant
    activationStatus ActivationStatusEnum required
}

entity OrderItem(tb_item_order) {
    quantity Integer required min(0)
    totalPrice BigDecimal required min(0)
    status OrderItemStatusEnum required
}


enum CustomerStatusEnum {
    UNDER_EVALUATION, ONBOARDING, READY_TO_START, WORKING, PENDENT, IN_FAILURE
}

enum SizeOptionEnum {
    S, M, L, XL, XXL, XXXL
}

enum OrderStatusEnum {
    COMPLETED, PENDING, CANCELLED
}

enum OrderItemStatusEnum {
    AVAILABLE, OUT_OF_STOCK, BACK_ORDER
}




relationship ManyToOne {

    Order{invoice(description)} to Invoice{ordersList}
    Order{customer(fullname) required} to Customer{ordersList}

	OrderItem{article(customName) required} to Article{ordersItemsList}
	Category{categoryParent(acronym)} to Category {childrenCategoriesList}

    Customer{buyerPerson(lastname) required} to Person{customersList}
    Customer{customerType(name)} to CustomerType{customersList}
    Customer{district(name)} to District{customersList}

}

relationship OneToMany {
   Order{orderItemsList} to OrderItem{order(businessCode) required}
   Category{articlesList} to Article{mainCategory(acronym)}
}

relationship ManyToMany {
    Article{assetCollection} to AssetCollection{article}
}



